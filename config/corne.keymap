/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define NUM 1
#define NAV 2
#define MEDIA 3

/ {
        conditional_layers {
            compatible = "zmk,conditional-layers";
            config_from_default {
                if-layers = <NUM NAV>;
                then-layer = <MEDIA>;
            };
        };

        macros {
                desktop: desktop {
                        label = "desktop";
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LCTRL>
                                , <&macro_tap &kp F11>
                                , <&macro_release &kp LCTRL>
                                ;
                };
                onepass: onepass {
                        label = "onepass";
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LGUI>
                                , <&macro_tap &kp BSLH>
                                , <&macro_release &kp LGUI>
                                ;
                };
                tabright: tabright {
                        label = "tabright";
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LGUI &kp LSHFT>
                                , <&macro_tap &kp RBKT>
                                , <&macro_release &kp LGUI &kp LSHFT>
                                ;
                };
                tableft: tableft {
                        label = "tableft";
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LGUI &kp LSHFT>
                                , <&macro_tap &kp LBKT>
                                , <&macro_release &kp LGUI &kp LSHFT>
                                ;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                DEFAULT {
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T      &kp Y   &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp LCTRL &kp A &kp S &kp D &kp F &kp G      &kp H   &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B      &kp N   &kp M  &kp COMMA &kp DOT &kp FSLH &kp ENTER
                   &kp LALT &kp LGUI &mo NUM    &mo NAV &kp SPACE &kp RGUI
                        >;
                };
                num_layer {
                        label = "NUM";
                        bindings = <
   &kp ESC  &kp N1  &kp N2  &kp N3    &kp N4    &kp N5     &kp N6    &kp N7    &kp N8   &kp N9         &kp N0          &kp BSPC
   &trans   &none   &none   &none     &none     &none      &kp MINUS &kp EQUAL &kp BSLH &kp LBKT       &kp RBKT        &kp GRAVE
   &trans   &none   &none   &desktop  &kp SPACE &onepass   &kp UNDER &kp PLUS  &kp PIPE &kp LEFT_BRACE &kp RIGHT_BRACE &kp TILDE
                            &trans    &trans    &trans     &trans    &trans    &trans
                        >;
                };


                nav_layer {
                        label = "NAV";
                        bindings = <
   &trans &none &none &none  &none  &none          &none  &tableft &kp UP   &tabright &none &trans
   &trans &none &none &none  &none  &none          &none  &kp LEFT &kp DOWN &kp RIGHT &none &none
   &trans &none &none &none  &none  &none          &none  &none    &none    &none     &none &trans
                      &trans &trans &trans         &trans &trans   &trans
                        >;
                };
                media_layer {
                        label = "MEDIA";
                        bindings = <
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1     &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &none  &none  &none &none &none &trans
   &none      &kp C_VOL_DN &kp C_VOL_UP     &kp K_MUTE   &none        &none          &none  &none  &none &none &none &none
   &trans     &kp C_PREV   &kp C_PLAY_PAUSE &kp C_NEXT   &none        &none          &kp UP &none  &none &none &none &trans
                                            &trans       &trans       &trans         &trans &trans &trans
                        >;
                };
        };

};